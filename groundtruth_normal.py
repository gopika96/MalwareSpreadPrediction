import pandas as pd
from sklearn import preprocessing

import csv


mal_f = open("normalized.csv","w")
writer = csv.writer(mal_f)
data4=[]
data3=[]
data5=[]
data6=[]
data7=[]
data8=[]

#---------Reading CSV-----------

with open("input_data.csv", "r") as f:
	reader = csv.reader(f)
	for row in reader:
		
		number3=row[3]
		data3.append(number3)
		number4=row[4]
		data4.append(number4)
		number5=row[5]
		data5.append(number5)
		number6=row[6]
		data6.append(number6)
		number7=row[7]
		data7.append(number7)
		number8=row[8]
		data8.append(number8)
		
		
		

row_3={'label':data3}
row_4={'timeline': data4}
row_5={'countries':data5}
row_6={'companies':data6}
row_7={'machines':data7}
row_8={'loss':data8}

#---------creating dataframes
df3= pd.DataFrame(row_3)
df4 = pd.DataFrame(row_4)
df5= pd.DataFrame(row_5)
df6= pd.DataFrame(row_6)
df7= pd.DataFrame(row_7)
df8= pd.DataFrame(row_8)



# Create x, where x the 'scores' column's values as floats

x3= df3['label'].values.astype(float)
x4= df4['timeline'].values.astype(float)
x5= df5['countries'].values.astype(float)
x6= df6['companies'].values.astype(float)
x7= df7['machines'].values.astype(float)
x8= df8['loss'].values.astype(float)

# Create a minimum and maximum processor object
min_max_scaler = preprocessing.MinMaxScaler()

# Create an object to transform the data to fit minmax processor


x_scaled3= min_max_scaler.fit_transform(x3)
x_scaled4= min_max_scaler.fit_transform(x4)
x_scaled5= min_max_scaler.fit_transform(x5)
x_scaled6= min_max_scaler.fit_transform(x6)
x_scaled7= min_max_scaler.fit_transform(x7)
x_scaled8= min_max_scaler.fit_transform(x8)


# Run the normalizer on the dataframe

df_normalized3 = pd.DataFrame(x_scaled3)
df_normalized4 = pd.DataFrame(x_scaled4)
df_normalized5 = pd.DataFrame(x_scaled5)
df_normalized6 = pd.DataFrame(x_scaled6)
df_normalized7= pd.DataFrame(x_scaled7)
df_normalized8= pd.DataFrame(x_scaled8)



		

df_normalized3.to_csv('norm_data.csv',mode = 'a', encoding='utf-8')
df_normalized4.to_csv('norm_data.csv',mode = 'a', encoding='utf-8')	
df_normalized5.to_csv('norm_data.csv',mode = 'a', encoding='utf-8')
df_normalized6.to_csv('norm_data.csv',mode = 'a', encoding='utf-8')
df_normalized7.to_csv('norm_data.csv',mode = 'a', encoding='utf-8')
df_normalized8.to_csv('norm_data.csv',mode = 'a', encoding='utf-8')

# View the dataframe


		


